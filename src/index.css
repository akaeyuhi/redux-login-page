@font-face {
    font-family: "Lexend Deca";
    src: url("./assets/fonts/LexendDeca-VariableFont_wght.ttf") format("truetype");
}

* {
    box-sizing: border-box;
    font-family: "Lexend Deca", sans-serif;
    margin: 0 auto;
}

body {
    background-color: #093545;
    color: #FFFFFF;
}


.container {
    display: flex;
    flex-direction: column;
    height: 100vh;
}

.footer {
    background-image: url("./assets/footer.svg");
    background-color: transparent;
    height: 111px;
    width: 100%;
    flex: 0 0 auto;
}

.main {
    flex: 1 0 auto;
    display: flex;
    justify-content: center;
    align-items: center;
}

.main__login {
    min-width: 300px;
    min-height: 350px;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

@media screen and (min-width: 1080px) {
    .main__login {
        width: 18%;
        height: 33%;
    }
}

.main__welcome {
    font-size: 64px;
    font-weight: 400;
    text-align: center;
}

.main__input {
    width: 100%;
    height: 45px;
    margin-top: 32px;
    background-color: #224957;
    padding: 12px;
    color: #FFFFFF;
    font-size: 14px;
    border-radius: 10px;
    border: none;
    transition: transform  0.25s ease-in-out;
}

.main__input:hover {
    transform: scale(1.05);
}

.main__input:focus {
    outline: 1px solid #fff;
}

.main__input::placeholder {
    color: #FFFFFF;
}

.main__checkbox-container {
    margin: 24px 0 24px 0;
    justify-content: center;
    align-items: center;
    vertical-align: middle;
    word-wrap: break-word;
}

.control {
    display: block;
    position: relative;
    padding-left: 30px;
    margin-bottom: 5px;
    padding-top: 3px;
    cursor: pointer;
    font-size: 14px;
}
.control input {
    position: absolute;
    z-index: -1;
    opacity: 0;
}
.control_indicator {
    position: absolute;
    top: 1px;
    left: 0;
    height: 20px;
    width: 20px;
    background: #224957;
    border: 0 solid #000000;
    border-radius: 5px;
}
.control:hover input ~ .control_indicator,
.control input:focus ~ .control_indicator {
    background: #3b7083;
}

.control input:checked ~ .control_indicator {
    background: #224957;
}
.control input:disabled ~ .control_indicator {
    background: #e6e6e6;
    opacity: 0.6;
    pointer-events: none;
}
.control_indicator:after {
    box-sizing: unset;
    content: '';
    position: absolute;
    display: none;
}
.control input:checked ~ .control_indicator:after {
    display: block;
}
.control-checkbox .control_indicator:after {
    left: 8px;
    top: 4px;
    width: 3px;
    height: 8px;
    border: solid #ffffff;
    border-width: 0 2px 2px 0;
    transform: rotate(45deg);
}
.control-checkbox input:disabled ~ .control_indicator:after {
    border-color: #7b7b7b;
}
.control-checkbox .control_indicator::before {
    content: '';
    display: block;
    position: absolute;
    left: 0;
    top: 0;
    width: 4.5rem;
    height: 4.5rem;
    margin-left: -1.3rem;
    margin-top: -1.3rem;
    background: #3b7083;
    border-radius: 1.065rem;
    opacity: 0.6;
    z-index: 99999;
    transform: scale(0);
}

.main__submit {
    cursor: pointer;
    width: 100%;
    height: 45px;
    border: none;
    background-color: #20DF7F;
    color: #FFFFFF;
    font-size: 16px;
    border-radius: 10px;
    transition: all 0.25s ease-in-out;
}

.main__submit:hover {
    transform: scale(1.05);
    background-color: rgba(32, 223, 127, 0.69);
}


.main__label {
    font-size: 14px
}

.main__tasks {
    background: #224957;
    border-radius: 8px;
    min-height: 320px;
    min-width: 500px;
    padding: 32px;
}

@media screen and (min-height: 1080px) {
    .main__tasks {
        min-height: 33%;
        width: 25%;
    }
}

.main__todo {
    font-size: 18px;
    margin-bottom: 16px;
}

.main__task_list {
    list-style-position: inside;
    padding: 0;
}

.main__list-item {
    margin-bottom: 16px;
    font-size: 16px;
    font-weight: 400;
}

.loader {
    border: 16px solid #f3f3f3;
    border-top: 16px solid #3498db;
    border-radius: 50%;
    width: 120px;
    height: 120px;
    animation: spin 2s linear infinite;
}

@keyframes spin {
    0% {
        transform: rotate(0deg)
    }
    100% {
        transform: rotate(360deg)
    }
}

